proxy-providers:
  Airport1:
    url: "订阅.url"
    type: http
    interval: 604800
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连

proxies:
  - {name: 直连, type: direct}
 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: true
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

external-controller: 0.0.0.0:9090
secret: ""
external-ui: "/etc/openclash/run/ui"
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

sniffer:
  enable: true
  sniff:
    HTTP:
      override-destination: true
      ports:
      - 80
      - 8080-8880
    QUIC:
      ports:
      - 443
      - 8443
    TLS:
      ports:
      - 443
      - 8443
  sniffing:
  - tls
  - http
  - quic
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"

tun:
  enable: true
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "+.919373.xyz"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query

  nameserver:
    - 211.136.192.6
    - 223.5.5.5

pr: &pr {type: select, proxies: [🛫 自动,🚀 默认,♿️ 手动,🚥 故转,🇸🇬 新加坡,🇺🇲 美国,🇰🇷 韩国,🇭🇰 香港,🇹🇼 台湾,🇯🇵 日本,直连]}
proxy-groups:
  - {name: 🚀 默认, type: select, proxies: [🛫 自动,♿️ 手动,🚥 故转,🇸🇬 新加坡,🇺🇲 美国,🇰🇷 韩国,🇭🇰 香港,🇹🇼 台湾,🇯🇵 日本,直连]}
  - {name: bilibili, type: select, proxies: [直连,🇭🇰 香港,🇹🇼 台湾], icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Bilibili_Global.png"}
  - {name: Steam, <<: *pr, icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Steam.png"}
  - {name: YouTube, <<: *pr, icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/YouTube.png"}
  - {name: Google, <<: *pr, icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Google.png"}
  - {name: AI, type: select, proxies: [🇺🇲 美国,♿️ 手动,🇸🇬 新加坡,🇹🇼 台湾,🇰🇷 韩国, 🇯🇵 日本,], icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/AI.png"}
  - {name: TikTok, <<: *pr, icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/TikTok.png"}
  - {name: Telegram, <<: *pr, icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Telegram.png"}
  - {name: NETFLIX, <<: *pr, icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Netflix_b.png"}
  - {name: 📦其他, <<: *pr}
  - {name: 🆖 广告, type: select, proxies: [REJECT,直连]}
  - {name: 🎯 直连, type: select, proxies: [直连,🚀 默认]}
  - {name: 🚥 故转, type: fallback, include-all: true, tolerance: 20, interval: 600, filter: "(?=.*((?i)新|Singapore|SG|SGW|SIN))^((?!(台|日|韩|深|美)).)*$"}
  - {name: 🛫 自动, type: url-test, include-all: true, tolerance: 20, interval: 600, filter: "^((?!(直连)).)*$"}
  - {name: ♿️ 手动, type: select, include-all: true}
  - {name: 🇺🇲 美国, type: url-test, include-all: true, filter: "(?i)美|芝加哥|us|unitedstates|united states|ORD"}
  - {name: 🇸🇬 新加坡, type: url-test, include-all: true, filter: "(?i)新|Singapore|SG|SGW|SIN"}
  - {name: 🇰🇷 韩国, type: url-test, include-all: true, filter: "(?i)韩|首尔|春川|Korea|KR|ICN"}
  - {name: 🇭🇰 香港, type: url-test, include-all: true, filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 🇹🇼 台湾, type: url-test, include-all: true, filter: "(?i)台|Taiwan|taiwan|TW"}
  - {name: 🇯🇵 日本, type: url-test, include-all: true, filter: "(?i)日|东京|jp|japan"}

rules:
  - DST-PORT,22,🎯 直连 
  - DOMAIN-SUFFIX,919373.xyz,直连
  - RULE-SET,private_domain, 直连
  - RULE-SET,reject_domain,🆖 广告
  - RULE-SET,bilibili_domain,bilibili
  - RULE-SET,steam_domain,Steam
  - RULE-SET,proxylite,🚀 默认
  - RULE-SET,ai_domain,AI
  - RULE-SET,youtube_domain,YouTube
  - RULE-SET,google_domain,Google
  - RULE-SET,tiktok_domain,TikTok
  - RULE-SET,telegram_domain,Telegram
  - RULE-SET,netflix_domain,NETFLIX
  - RULE-SET,gfw_domain,🚀 默认
  - RULE-SET,geolocation-!cn,🚀 默认
  - RULE-SET,cn_domain,🎯 直连
  - RULE-SET,google_ip,Google,no-resolve
  - RULE-SET,netflix_ip,NETFLIX,no-resolve
  - RULE-SET,telegram_ip,Telegram,no-resolve
  - RULE-SET,cn_ip,🎯 直连
  - MATCH,📦其他


rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  reject_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ads-all.mrs"}
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  bilibili_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bilibili.mrs"}
  steam_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam.mrs"}
  proxylite: { <<: *class, url: "https://raw.githubusercontent.com/Mxc373/Template/refs/heads/main/Direct.list"}
  ai_domain: {  <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs" }
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
